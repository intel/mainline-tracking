[
    {
        "BriefDescription": "Counts the total number of branch instructions retired for all branch types.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.ALL_BRANCHES",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event BR_INST_RETIRED.NEAR_CALL",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.CALL",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0xf9"
    },
    {
        "BriefDescription": "Counts the number of retired JCC (Jump on Conditional Code) branch instructions retired, includes both taken and not taken branches.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.COND",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0x7e"
    },
    {
        "BriefDescription": "Counts the number of taken JCC (Jump on Conditional Code) branch instructions retired.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.COND_TAKEN",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0xfe"
    },
    {
        "BriefDescription": "Counts the number of far branch instructions retired, includes far jump, far call and return, and interrupt call and return.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.FAR_BRANCH",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0xbf"
    },
    {
        "BriefDescription": "Counts the number of near indirect JMP and near indirect CALL branch instructions retired.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.INDIRECT",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0xeb"
    },
    {
        "BriefDescription": "Counts the number of near indirect CALL branch instructions retired.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.INDIRECT_CALL",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0xfb"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event BR_INST_RETIRED.INDIRECT_CALL",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.IND_CALL",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0xfb"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event BR_INST_RETIRED.COND",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.JCC",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0x7e"
    },
    {
        "BriefDescription": "Counts the number of near CALL branch instructions retired.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.NEAR_CALL",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0xf9"
    },
    {
        "BriefDescription": "Counts the number of near RET branch instructions retired.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.NEAR_RETURN",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0xf7"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event BR_INST_RETIRED.INDIRECT",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.NON_RETURN_IND",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0xeb"
    },
    {
        "BriefDescription": "Counts the number of near relative CALL branch instructions retired.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.REL_CALL",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0xfd"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event BR_INST_RETIRED.NEAR_RETURN",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.RETURN",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0xf7"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event BR_INST_RETIRED.COND_TAKEN",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc4",
        "EventName": "BR_INST_RETIRED.TAKEN_JCC",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0xfe"
    },
    {
        "BriefDescription": "Counts the total number of mispredicted branch instructions retired for all branch types.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc5",
        "EventName": "BR_MISP_RETIRED.ALL_BRANCHES",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003"
    },
    {
        "BriefDescription": "Counts the number of mispredicted JCC (Jump on Conditional Code) branch instructions retired.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc5",
        "EventName": "BR_MISP_RETIRED.COND",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0x7e"
    },
    {
        "BriefDescription": "Counts the number of mispredicted taken JCC (Jump on Conditional Code) branch instructions retired.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc5",
        "EventName": "BR_MISP_RETIRED.COND_TAKEN",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0xfe"
    },
    {
        "BriefDescription": "Counts the number of mispredicted near indirect JMP and near indirect CALL branch instructions retired.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc5",
        "EventName": "BR_MISP_RETIRED.INDIRECT",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0xeb"
    },
    {
        "BriefDescription": "Counts the number of mispredicted near indirect CALL branch instructions retired.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc5",
        "EventName": "BR_MISP_RETIRED.INDIRECT_CALL",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0xfb"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event BR_MISP_RETIRED.INDIRECT_CALL",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc5",
        "EventName": "BR_MISP_RETIRED.IND_CALL",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0xfb"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event BR_MISP_RETIRED.COND",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc5",
        "EventName": "BR_MISP_RETIRED.JCC",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0x7e"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event BR_MISP_RETIRED.INDIRECT",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc5",
        "EventName": "BR_MISP_RETIRED.NON_RETURN_IND",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0xeb"
    },
    {
        "BriefDescription": "Counts the number of mispredicted near RET branch instructions retired.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc5",
        "EventName": "BR_MISP_RETIRED.RETURN",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0xf7"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event BR_MISP_RETIRED.COND_TAKEN",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc5",
        "EventName": "BR_MISP_RETIRED.TAKEN_JCC",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "UMask": "0xfe"
    },
    {
        "BriefDescription": "Counts the number of unhalted core clock cycles. (Fixed event)",
        "CollectPEBSRecord": "2",
        "Counter": "Fixed counter 1",
        "EventName": "CPU_CLK_UNHALTED.CORE",
        "PEBScounters": "33",
        "SampleAfterValue": "2000003",
        "Speculative": "1",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Counts the number of unhalted core clock cycles.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x3c",
        "EventName": "CPU_CLK_UNHALTED.CORE_P",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "2000003",
        "Speculative": "1"
    },
    {
        "BriefDescription": "Counts the number of unhalted reference clock cycles at TSC frequency. (Fixed event)",
        "CollectPEBSRecord": "2",
        "Counter": "Fixed counter 2",
        "EventName": "CPU_CLK_UNHALTED.REF_TSC",
        "PEBScounters": "34",
        "SampleAfterValue": "2000003",
        "Speculative": "1",
        "UMask": "0x3"
    },
    {
        "BriefDescription": "Counts the number of unhalted reference clock cycles at TSC frequency.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x3c",
        "EventName": "CPU_CLK_UNHALTED.REF_TSC_P",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "2000003",
        "Speculative": "1",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts the number of unhalted core clock cycles. (Fixed event)",
        "CollectPEBSRecord": "2",
        "Counter": "Fixed counter 1",
        "EventName": "CPU_CLK_UNHALTED.THREAD",
        "PEBScounters": "33",
        "SampleAfterValue": "2000003",
        "Speculative": "1",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Counts the number of unhalted core clock cycles.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x3c",
        "EventName": "CPU_CLK_UNHALTED.THREAD_P",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "2000003",
        "Speculative": "1"
    },
    {
        "BriefDescription": "Counts the total number of instructions retired. (Fixed event)",
        "CollectPEBSRecord": "2",
        "Counter": "Fixed counter 0",
        "EventName": "INST_RETIRED.ANY",
        "PEBS": "1",
        "PEBScounters": "32",
        "SampleAfterValue": "2000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts the total number of instructions retired.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc0",
        "EventName": "INST_RETIRED.ANY_P",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "2000003"
    },
    {
        "BriefDescription": "This event is deprecated. Refer to new event LD_BLOCKS.ADDRESS_ALIAS",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x03",
        "EventName": "LD_BLOCKS.4K_ALIAS",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "UMask": "0x4"
    },
    {
        "BriefDescription": "Counts the number of retired loads that are blocked because it initially appears to be store forward blocked, but subsequently is shown not to be blocked based on 4K alias check.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x03",
        "EventName": "LD_BLOCKS.ADDRESS_ALIAS",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "UMask": "0x4"
    },
    {
        "BriefDescription": "Counts the number of retired loads that are blocked because its address exactly matches an older store whose data is not ready.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x03",
        "EventName": "LD_BLOCKS.DATA_UNKNOWN",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts the number of machine clears due to memory ordering in which an internal load passes an older store within the same CPU.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc3",
        "EventName": "MACHINE_CLEARS.DISAMBIGUATION",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "20003",
        "Speculative": "1",
        "UMask": "0x8"
    },
    {
        "BriefDescription": "Counts the number of machines clears due to memory renaming.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc3",
        "EventName": "MACHINE_CLEARS.MRN_NUKE",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1",
        "UMask": "0x80"
    },
    {
        "BriefDescription": "Counts the number of machine clears due to a page fault.  Counts both I-Side and D-Side (Loads/Stores) page faults.  A page fault occurs when either the page is not present, or an access violation occurs.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc3",
        "EventName": "MACHINE_CLEARS.PAGE_FAULT",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "20003",
        "Speculative": "1",
        "UMask": "0x20"
    },
    {
        "BriefDescription": "Counts the number of machine clears that flush the pipeline and restart the machine with the use of microcode due to SMC, MEMORY_ORDERING, FP_ASSISTS, PAGE_FAULT, DISAMBIGUATION, and FPC_VIRTUAL_TRAP.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc3",
        "EventName": "MACHINE_CLEARS.SLOW",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "20003",
        "Speculative": "1",
        "UMask": "0x6f"
    },
    {
        "BriefDescription": "Counts the number of machine clears due to program modifying data (self modifying code) within 1K of a recently fetched code page.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc3",
        "EventName": "MACHINE_CLEARS.SMC",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "20003",
        "Speculative": "1",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts the number of issue slots not consumed by the backend due to a micro-sequencer (MS) scoreboard, which stalls the front-end from issuing from the UROM until a specified older uop retires.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x75",
        "EventName": "SERIALIZATION.NON_C01_MS_SCB",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "200003",
        "Speculative": "1",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Counts the total number of issue slots that were not consumed by the backend because allocation is stalled due to a mispredicted jump or a machine clear.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x73",
        "EventName": "TOPDOWN_BAD_SPECULATION.ALL",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to fast nukes such as memory ordering and memory disambiguation machine clears.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x73",
        "EventName": "TOPDOWN_BAD_SPECULATION.FASTNUKE",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Counts the total number of issue slots that were not consumed by the backend because allocation is stalled due to a machine clear (nuke) of any kind including memory ordering and memory disambiguation.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x73",
        "EventName": "TOPDOWN_BAD_SPECULATION.MACHINE_CLEARS",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1",
        "UMask": "0x3"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to branch mispredicts.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x73",
        "EventName": "TOPDOWN_BAD_SPECULATION.MISPREDICT",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1",
        "UMask": "0x4"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to a machine clear (nuke).",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x73",
        "EventName": "TOPDOWN_BAD_SPECULATION.NUKE",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts the total number of issue slots every cycle that were not consumed by the backend due to backend stalls.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.ALL",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to certain allocation restrictions.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.ALLOC_RESTRICTIONS",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to memory reservation stalls in which a scheduler is not able to accept uops.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.MEM_SCHEDULER",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to IEC or FPC RAT stalls, which can be due to FIQ or IEC reservation stalls in which the integer, floating point or SIMD scheduler is not able to accept uops.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.NON_MEM_SCHEDULER",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1",
        "UMask": "0x8"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to the physical register file unable to accept an entry (marble stalls).",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.REGISTER",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1",
        "UMask": "0x20"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to the reorder buffer being full (ROB stalls).",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.REORDER_BUFFER",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1",
        "UMask": "0x40"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not consumed by the backend due to scoreboards from the instruction queue (IQ), jump execution unit (JEU), or microcode sequencer (MS).",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x74",
        "EventName": "TOPDOWN_BE_BOUND.SERIALIZATION",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1",
        "UMask": "0x10"
    },
    {
        "BriefDescription": "Counts the total number of issue slots every cycle that were not consumed by the backend due to frontend stalls.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.ALL",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to BACLEARS.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.BRANCH_DETECT",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1",
        "UMask": "0x2"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to BTCLEARS.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.BRANCH_RESTEER",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1",
        "UMask": "0x40"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to the microcode sequencer (MS).",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.CISC",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to decode stalls.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.DECODE",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1",
        "UMask": "0x8"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to frontend bandwidth restrictions due to decode, predecode, cisc, and other limitations.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.FRONTEND_BANDWIDTH",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1",
        "UMask": "0x8d"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to a latency related stalls including BACLEARs, BTCLEARs, ITLB misses, and ICache misses.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.FRONTEND_LATENCY",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1",
        "UMask": "0x72"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to ITLB misses.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.ITLB",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1",
        "UMask": "0x10"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to other common frontend stalls not categorized.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.OTHER",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1",
        "UMask": "0x80"
    },
    {
        "BriefDescription": "Counts the number of issue slots every cycle that were not delivered by the frontend due to wrong predecodes.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0x71",
        "EventName": "TOPDOWN_FE_BOUND.PREDECODE",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003",
        "Speculative": "1",
        "UMask": "0x4"
    },
    {
        "BriefDescription": "Counts the total number of consumed retirement slots.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc2",
        "EventName": "TOPDOWN_RETIRING.ALL",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "1000003"
    },
    {
        "BriefDescription": "Counts the total number of uops retired.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc2",
        "EventName": "UOPS_RETIRED.ALL",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "2000003"
    },
    {
        "BriefDescription": "Counts the number of integer divide uops retired.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc2",
        "EventName": "UOPS_RETIRED.IDIV",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "2000003",
        "UMask": "0x10"
    },
    {
        "BriefDescription": "Counts the number of uops that are from complex flows issued by the micro-sequencer (MS).",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc2",
        "EventName": "UOPS_RETIRED.MS",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "2000003",
        "UMask": "0x1"
    },
    {
        "BriefDescription": "Counts the number of x87 uops retired, includes those in MS flows.",
        "CollectPEBSRecord": "2",
        "Counter": "0,1,2,3,4,5",
        "EventCode": "0xc2",
        "EventName": "UOPS_RETIRED.X87",
        "PEBS": "1",
        "PEBScounters": "0,1,2,3,4,5",
        "SampleAfterValue": "2000003",
        "UMask": "0x2"
    }
]
